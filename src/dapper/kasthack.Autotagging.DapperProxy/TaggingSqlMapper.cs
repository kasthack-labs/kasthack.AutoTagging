namespace kasthack.Autotagging.DapperProxy;

using System.Reflection;

/// <summary>
/// Proxy to Dapper.SqlMapper that adds query tags to every request.
/// </summary>
public static partial class TaggingSqlMapper
{
    /// <summary>
    /// Gets or sets application name for tagging. Defaults to entry assembly name.
    /// </summary>
    public static string AppName { get; set; } = Assembly.GetEntryAssembly().GetName().Name;

    /*
     * Actual proxy methods come from a file generated by kasthack.Autotagging.DapperProxySourceGenerator.DapperSourceGenerator
     */
    private static void DummyCheck()
    {
        // fail the build if source generator hasn't produced out.
        _ = Dummy;
    }

    private static string? ApplyTag(string sql, string callerMethod, string callerFile, int callerLine)
        => QueryTagger.ApplyTag(sql, AppName, callerMethod, callerFile, callerLine);

    private static Dapper.CommandDefinition ApplyTag(Dapper.CommandDefinition command, string callerMethod, string callerFile, int callerLine)
        => new Dapper.CommandDefinition(ApplyTag(command.CommandText, callerMethod, callerFile, callerLine)!, command.Parameters, command.Transaction, command.CommandTimeout, command.CommandType, command.Flags, command.CancellationToken);
}
